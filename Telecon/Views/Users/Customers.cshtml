@model IEnumerable<Telecon.Models.Customer>
@{
    Layout = "~/Views/Estructura/_Layout.cshtml";
    Page.Title = "Telecon Erickson C.A - My Customers";
    int counter = 1;
}


<h2 id="TClientes">CUSTOMERS LIST</h2>


<div class="ClientsBlock">
    <button type="button" id="AgregarCB" onclick="AddCB();">Add Customer<div id="AgregarC"></div></button>
    <button type="button" id="ModificarCB" onclick="EditCB();">Edit Customer<div id="ModificarC"></div></button>
    <button type="button" id="EliminarCB" onclick="DeleteCB();">Delete Customer<div id="EliminarC"></div></button>
</div>

@using (@Html.BeginForm("", "", FormMethod.Post, new { id = "add-customer-form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div id="VAgregarC" class="VentanaAgregarC">
        <div>
            <span class="pull-right glyphicon glyphicon-off" id="CerrarVentanaAgregarC" onclick="CloseWindow();"></span>
            <h2 id="add-customer-title">Add New Customer</h2>
            <hr />
            <p id="p-razon-social">Company's Name</p>
            @Html.TextBox("a-razon-social", "", new { id = "agregar-razon-social", @value = "", maxlength = "128", required = "required" })
            <p id="p-nombres">Names</p>
            @Html.TextBox("a-nombres", "", new { id = "agregar-nombres", @value = "", maxlength = "72", onkeypress = "validatenames(event)" })
            <p id="p-apellidos">Lastnames</p>
            @Html.TextBox("a-apellidos", "", new { id = "agregar-apellidos", @value = "", maxlength = "72", onkeypress = "validatenames(event)" })
            <p id="p-telefono">Phone Number</p>
            @Html.TextBox("a-telefono", "", new { id = "agregar-telefono", @value = "", maxlength = "50", required = "required", onkeypress = "validatenum(event)" })
            <p id="p-direccion">Address</p>
            @Html.TextBox("a-direccion", "", new { id = "agregar-direccion", @value = "", maxlength = "128", required = "required" })
            <p id="p-comentarios">Note</p>
            @Html.TextArea("a-comentarios", "", new { id = "agregar-comentarios", @value = "", maxlength = "128" })
            <button type="submit" onclick="return Validations();">Add</button>
            <button type="reset" id="add-reset-button" onclick="ResetAdd();">Reset</button>

        </div>
    </div>
}

@using (@Html.BeginForm("", "", FormMethod.Post, new { id = "edit-customer-form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div id="VModificarC" class="VentanaModificarC">
        <div>
            <span class="pull-right glyphicon glyphicon-off" id="CerrarVentanaModificarC" onclick="CloseWindow();"></span>
            <h2 id="edit-customer-title">Edit Customer</h2>
            <hr />
            <p id="NombreCliente">Customer</p>
            <select id="SeleccionCliente" onchange="CustomerCheck(this); CargarCliente(this);">
                <option value="Choose">Choose</option>
                @foreach (var item in Model)
                {
                    <option value="@item.ID">@item.razonsocial</option>
                }
            </select>
            <p id="pm-razon-social">Company's Name</p>
            @Html.TextBox("m-razon-social", "", new { id = "editar-razon-social", @value = "", maxlength = "128", required = "required" })
            <p id="pm-nombres">Names</p>
            @Html.TextBox("m-nombres", "", new { id = "editar-nombres", @value = "", maxlength = "72", oninput = "validatenames(event)" })
            <p id="pm-apellidos">Lastnames</p>
            @Html.TextBox("m-apellidos", "", new { id = "editar-apellidos", @value = "", maxlength = "72", oninput = "validatenames(event)" })
            <p id="pm-telefono">Phone Number</p>
            @Html.TextBox("m-telefono", "", new { id = "editar-telefono", @value = "", maxlength = "50", required = "required", onkeydown = "validatenum(event)" })
            <p id="pm-direccion">Address</p>
            @Html.TextBox("m-direccion", "", new { id = "editar-direccion", @value = "", maxlength = "128", required = "required" })
            <p id="pm-comentarios">Note</p>
            @Html.TextArea("m-comentarios", "", new { id = "editar-comentarios", @value = "", maxlength = "128" })
            <button type="submit" onclick="return ValidationsM();">Update</button>
            <button type="reset" onclick="ResetEdit();" id="edit-reset">Reset</button>

        </div>
    </div>
}

@using (@Html.BeginForm("DeleteCustomers", "Users", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div id="VEliminarC" class="VentanaEliminarC">
        <div>
            <span class="pull-right glyphicon glyphicon-off" id="CerrarVentanaEliminarC" onclick="CloseWindow();"></span>
            <h2 id="delete-customer-title">Delete Customer(s)</h2>
            <hr /><br />
            <p>¿Are you sure you wish to delete the following users from your list?</p>
            <div id="EListaClientes">
                <table border="1" id="delete-customers-table">
                    <tr>
                        <td colspan="2">Customers</td>
                    </tr>
                    <tr>
                        <td>Company's Name</td>
                        <td>Address</td>
                    </tr>

                </table>
            </div>
 
                <button style="display: none;" type="submit" id="EliminarCliente" onclick="return StartDeleting();">Yes</button>
                <button style="display: none;" type="button" id="NoEliminarCliente" onclick="CloseWindow();">No</button>
          

        </div>
    </div>
}


<div id="validacion" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button id="cerrar-validacion" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div id="validaciones-contenido" class="modal-body">


            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>






<table class="TablaClientes">
    <tr>
        <th></th>
        <th>N°</th>
        <th>Company's Name</th>
        <th>Names</th>
        <th>Lastnames</th>
        <th>Phone</th>
        <th>Address</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td><input type="checkbox" value="@item.ID" /></td>
            <td>@counter</td>
            <td>@item.razonsocial</td>
            <td>@item.nombres</td>
            <td>@item.apellidos</td>
            <td>@item.telefono</td>
            <td>@item.direccion</td>
        </tr>
        counter++;
    }
</table>

<script type="text/javascript">

    $('#agregar-telefono').keypress(validatenum);
    $('#editar-telefono').keypress(validatenum);
    var customers = new Array();

    $('#EliminarCB').click(function () {
        var values = new Array();
        $('.TablaClientes [type="checkbox"]').each(function (i, chk) {
            if (chk.checked) {
                var data = $(this).parents('tr:eq(0)');
                values.push({ 'razonsocial': $(data).find('td:eq(2)').text().trim(), 'direccion': $(data).find('td:eq(6)').text().trim() });
            }
        });
        if (values.length > 0) {
            document.getElementById("EliminarCliente").style.display = "inline";
            document.getElementById("NoEliminarCliente").style.display = "inline";
            FillDeleteTable(values);
        }
    });

    function FillDeleteTable(customersList) {
        for (var i = 0; i < customersList.length; i++) {
            $('#delete-customers-table > tbody').append('<tr><td>' + customersList[i].razonsocial + '</td><td>' +
                customersList[i].direccion + '</td></tr>');
            customers.push(customersList[i].razonsocial);
        }
    }

    function StartDeleting() {
        DeleteCustomers(customers);
        return false;
    }

    function CustomerCheck(selectedItem) {
        var item = selectedItem.value;
        if (item == "Choose") {
            ResetEdit();
            document.getElementById("edit-reset").click();
        }
        document.getElementById("pm-razon-social").textContent = "Company's Name";
        document.getElementById("pm-nombres").textContent = "Names";
        document.getElementById("pm-apellidos").textContent = "Lastnames";
        document.getElementById("pm-telefono").textContent = "Phone Number";
        document.getElementById("pm-direccion").textContent = "Address";
    }

    function ResetAdd() {
        document.getElementById("p-razon-social").textContent = "Company's Name";
        document.getElementById("p-nombres").textContent = "Names";
        document.getElementById("p-apellidos").textContent = "Lastnames";
        document.getElementById("p-telefono").textContent = "Phone Number";
        document.getElementById("p-direccion").textContent = "Address";
    }

    function ResetEdit() {
        document.getElementById("pm-razon-social").textContent = "Company's Name";
        document.getElementById("pm-nombres").textContent = "Names";
        document.getElementById("pm-apellidos").textContent = "Lastnames";
        document.getElementById("pm-telefono").textContent = "Phone Number";
        document.getElementById("pm-direccion").textContent = "Address";
        document.getElementById("SeleccionCliente").selectedIndex = "0";
    }

    function Validations() {
        var razonsocial = document.getElementById("agregar-razon-social").value;
        var nombres = document.getElementById("agregar-nombres").value;
        var apellidos = document.getElementById("agregar-apellidos").value;
        var telefono = document.getElementById("agregar-telefono").value;
        var direccion = document.getElementById("agregar-direccion").value;
        var comentarios = document.getElementById("agregar-comentarios").value;

        if (razonsocial.trim() == "") {
            document.getElementById("p-razon-social").textContent = "Company's Name";
            document.getElementById("p-razon-social").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> You must type a company's name </span>";
            return false;
        }
        if (razonsocial.trim().length < 3) {
            document.getElementById("p-razon-social").textContent = "Company's Name";
            document.getElementById("p-razon-social").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 3 characters minimum. </span>";
            return false;
        }

        if (nombres.trim() != "" && nombres.trim().length < 3) {
            document.getElementById("p-nombres").textContent = "Names";
            document.getElementById("p-nombres").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 3 characters minimum. </span>";
            return false;
        }

        if (apellidos.trim() != "" && apellidos.trim().length < 2) {
            document.getElementById("p-apellidos").textContent = "Lastnames";
            document.getElementById("p-apellidos").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 2 characters minimum. </span>";
            return false;
        }

        if (telefono.trim() == "") {
            document.getElementById("p-telefono").textContent = "Phone Number";
            document.getElementById("p-telefono").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> The phone number is obligatory </span>";
            return false;
        }
        if (telefono.trim().length < 6) {
            document.getElementById("p-telefono").textContent = "Phone Number";
            document.getElementById("p-telefono").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 6 digits minimum. </span>";
            return false;
        }
        if (direccion.trim().length < 3) {
            document.getElementById("p-direccion").textContent = "Address";
            document.getElementById("p-direccion").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 3 characters minimum. </span>";
            return false;
        }

        return ValidateCustomer();
    }

    function ValidationsM() {
        var razonsocial = document.getElementById("editar-razon-social").value;
        var nombres = document.getElementById("editar-nombres").value;
        var apellidos = document.getElementById("editar-apellidos").value;
        var telefono = document.getElementById("editar-telefono").value;
        var direccion = document.getElementById("editar-direccion").value;
        var comentarios = document.getElementById("editar-comentarios").value;
        var itemSeleccionado = document.getElementById("SeleccionCliente");
        var strItem = itemSeleccionado.options[itemSeleccionado.selectedIndex].text;

        if (strItem.trim() == "Choose") {
            document.getElementById("pm-razon-social").textContent = "Company's Name";
            document.getElementById("pm-razon-social").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> You must select a customer</span>";
            return false;
        }

        if (razonsocial.trim() == "") {
            document.getElementById("pm-razon-social").textContent = "Company's Name";
            document.getElementById("pm-razon-social").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> You must type a company's name </span>";
            return false;
        }
        if (razonsocial.trim().length < 3) {
            document.getElementById("pm-razon-social").textContent = "Company's Name";
            document.getElementById("pm-razon-social").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 3 characters minimum. </span>";
            return false;
        }

        if (nombres.trim() != "" && nombres.trim().length < 3) {
            document.getElementById("pm-nombres").textContent = "Names";
            document.getElementById("pm-nombres").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 3 characters minimum. </span>";
            return false;
        }

        if (apellidos.trim() != "" && apellidos.trim().length < 2) {
            document.getElementById("pm-apellidos").textContent = "Lastnames";
            document.getElementById("pm-apellidos").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 2 characters minimum. </span>";
            return false;
        }

        if (telefono.trim() == "") {
            document.getElementById("pm-telefono").textContent = "Phone Number";
            document.getElementById("pm-telefono").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> The phone number is obligatory </span>";
            return false;
        }
        if (telefono.trim().length < 6) {
            document.getElementById("pm-telefono").textContent = "Phone Number";
            document.getElementById("pm-telefono").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 6 digits minimum. </span>";
            return false;
        }
        if (direccion.trim().length < 3) {
            document.getElementById("pm-direccion").textContent = "Address";
            document.getElementById("pm-direccion").innerHTML += "<span style='padding-right: 5%; color: red; float: right;'> 3 characters minimum. </span>";
            return false;
        }

        return ValidateCustomerEdit();
    }

    function validatenames(evt) {
        var inputValue = evt.which;
        // allow letters and whitespaces only.
        if (inputValue == 37 || inputValue == 38 || inputValue == 39 || inputValue == 40 || inputValue == 8 || inputValue == 46) { // Left / Up / Right / Down Arrow, Backspace, Delete keys
            return;
        }
        if (!(inputValue >= 65 && inputValue <= 123) && (inputValue != 32 && inputValue != 0)) {
            evt.preventDefault();
        }

    }


    function validatenum(event) {
        var key = window.event ? event.keyCode : event.which;
        if (event.keyCode == 37 || event.keyCode == 38 || event.keyCode == 39 || event.keyCode == 40 || event.keyCode == 8 || event.keyCode == 46) { // Left / Up / Right / Down Arrow, Backspace, Delete keys
            return;
        }
        if (event.keyCode === 8 || event.keyCode === 46) {
            return true;
        } else if (key < 48 || key > 57) {
            return false;
        } else {
            return true;
        }
    }

    function AddCB() {
        window.location.href = "#VAgregarC";
    }

    function EditCB() {
        window.location.href = "#VModificarC";
    }

    function DeleteCB() {
        window.location.href = "#VEliminarC";
    }

    function CloseWindow() {
        window.location.href = "customers";
    }

    function Español() {
        window.location.href = "/es/perfil/clientes";
    }

    function English() {
        window.location.href = "/en/profile/customers";
    }

</script>