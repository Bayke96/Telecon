@model Telecon.Models.User
@{
    Layout = "~/Views/Estructura/_Forma.cshtml";
    Page.Title = "Telecon Erickson C.A - Editar Usuario";
}

<h2 id="EditTitle">EDITAR USUARIO - CRISTIAN GONZÁLEZ </h2>
@using (@Html.BeginForm("", "", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <div class="EditarFoto">
        <h2>FOTO DE PERFIL</h2>
        <hr />
        <img id="EditImage" class="img-responsive img-thumbnail" src="~/Style/Media/UsuarioPre.png" />

        <label id="EditarImagen" for="archivos" class="btn btn-primary">Buscar Imagen</label>
        <input id="archivos" accept="image/*" style="visibility:hidden;" type="file" name="myImagenSelect">
    </div>

    <div class="EditarCargo">
        <h2><b>PRIVILEGIOS</b></h2>
        <hr />
        <input id="RankCheck" type="checkbox" class="checkbox" name="Administrador" value="Admin">

        <p>Administrador</p>
    </div>

    <div class="PanelEditar">
        <table class="TablaEditar" border="1">
            <tr>
                <td colspan="2" id="EditHeader"><p>INFORMACIÓN DE USUARIO</p></td>
            </tr>
            <tr>
                <td class="EditarCell"><p>NOMBRE DE USUARIO</p></td>

                <td> @Html.TextBoxFor(m => m.firstnames, new { @id = "username-text", @class = "form-control", @value = "", maxlength = "24", required = "required" })</td>
            </tr>
            <tr>
                <td class="EditarCell"><p>NOMBRES</p></td>
                <td> @Html.TextBoxFor(m => m.firstnames, new { @id = "firstnames-text", @class = "form-control", @value = "", maxlength = "50", required = "required" })</td>
            </tr>
            <tr>
                <td class="EditarCell"><p>APELLIDOS</p></td>
                <td> @Html.TextBoxFor(m => m.lastnames, new { @id = "lastnames-text", @class = "form-control", @value = "", maxlength = "50", required = "required" })</td>
            </tr>
            <tr>
                <td class="EditarCell"><p>EDAD</p></td>
                <td> @Html.TextBoxFor(m => m.age, new { @id = "age-text", @class = "form-control", @value = "", maxlength = "2", required = "required" })</td>
            </tr>
            <tr>
                <td class="EditarCell"><p>CORREO</p></td>
                <td> @Html.TextBoxFor(m => m.email, new { @id = "email-text", @class = "form-control", @value = "", maxlength = "50", required = "required" })</td>
            </tr>
            <tr>
                <td class="EditarCell"><p>TELÉFONO</p></td>
                <td>@Html.TextBoxFor(m => m.number, new { @id = "phone-text", @class = "form-control", @value = "", maxlength = "50" })</td>
            </tr>

        </table>

        <button onclick="return EditUser();" type="button">ACTUALIZAR</button>
        <button type="button" id="BtnRegresar">REGRESAR</button>
    </div>


}
<

<div id="validacion" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button id="cerrar-validacion" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">x</span>
                </button>
            </div>
            <div id="validaciones-contenido" class="modal-body">


            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>



<script type="text/javascript">

    var timer = null;

    function EditUser() {

        // Datos del usuario
        var usuario = document.getElementById("username-text").value,
            nombres = document.getElementById("firstnames-text").value,
            apellidos = document.getElementById("lastnames-text").value,
            correo = document.getElementById("email-text").value,
            edad = document.getElementById("age-text").value,
            telefono = document.getElementById("phone-text").value;




        var divtext = document.getElementById("validaciones-contenido");
        var validaciones = "";
        var reuser = new RegExp("^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$");
        var numeros = new RegExp("^[0-9]+$");
        var letras = new RegExp("^[-+0-9\\s]+$");

        var renames = new RegExp("^[a-zA-Z\\s]+$");

        if (usuario.trim() == "" || usuario == null) {
            validaciones += "<p>Debe escribir un nombre de usuario.</p>\n"
        }
        if (usuario.trim() != "" && reuser.test(usuario) == false) {
            validaciones += "<p>El campo nombre de usuario solo acepta caracteres alfanumericos</p>\n"
        }
        if (usuario.trim() != "" && usuario.length < 3) {
            validaciones += "<p>El nombre de usuario debe contener minimo 3 caracteres.</p>\n"
        }

        if (nombres.trim() == "" || nombres == null) {
            validaciones += "<p>Debe escribir un nombre.</p>\n"
        }
        if (nombres.trim() != "" && renames.test(nombres) == false) {
            validaciones += "<p>El campo nombres solo acepta letras y espacios.</p>\n"
        }
        if (nombres.trim() != "" && nombres.length < 3) {
            validaciones += "<p>El nombre debe contener minimo 3 caracteres.</p>\n"
        }

        if (apellidos.trim() == "" || apellidos == null) {
            validaciones += "<p>Debe escribir un apellido.</p>\n"
        }
        if (apellidos.trim() != "" && renames.test(apellidos) == false) {
            validaciones += "<p>El campo apellidos solo acepta letras y espacios.</p>\n"
        }
        if (apellidos.trim() != "" && apellidos.length < 2) {
            validaciones += "<p>El apellido debe contener minimo 2 caracteres.</p>\n"
        }
        console.log(edad);

        if (edad.trim() == "" || edad == null) {
            validaciones += "<p>Debe escribir la edad del usuario.</p>\n"
        }
        if (edad.trim() != "" && numeros.test(edad) == false) {
            validaciones += "<p>El campo edad solo acepta números.</p>\n"
            document.getElementById("age-text").value = "";
        }
        if (edad.trim() != "" && edad < 15) {
            validaciones += "<p>El usuario debe tener un minimo de 15 años para tener una cuenta.</p>\n"
        }

        if (correo.trim() == "" || correo == null) {
            validaciones += "<p>Debe escribir un correo.</p>\n"
        }
        if (correo.trim() != "" && !correo.includes("@@")) {
            validaciones += "<p>El correo debe incluir un &#64;.</p>\n"
        }
        if (correo.trim() != "" && correo.length < 6) {
            validaciones += "<p>El correo debe contener minimo 6 caracteres.</p>\n"
        }

        if (telefono.trim() != "" && letras.test(telefono) == false) {
            validaciones += "<p>El campo telefono solo acepta números y simbolos + -</p>\n"
        }



        if (validaciones != "") {
            divtext.innerHTML = validaciones;
            $('#validacion').modal('show');
            validaciones = "";

            window.clearTimeout(timer);
            timer = setTimeout(function () {
                $("#cerrar-validacion").click();
            }, 5000); // <-- time in milliseconds
            return false;
        } else {
            return true;
        }


    }


    $(document).ready(function () {
        $('.AdminButton').css('visibility', 'visible');

    });

    $('#archivos').change(function () {
        var file = this.files[0];
        var reader = new FileReader();
        reader.onloadend = function () {
            $('#EditImage').attr('src', '' + reader.result + '');
        }
        if (file) {
            reader.readAsDataURL(file);
        } else {
        }
    });

    $(function () {
        $("#BtnRegresar").click(function () {
            window.location.href = "/es/admin/usuarios";
        });
    });

    $(function () {
        $("#Español").click(function () {
            window.location.href = "/es/admin/usuarios/editarusuario";
        });
    });
    $(function () {
        $("#English").click(function () {
            window.location.href = "/en/admin/users/edituser";
        });
    });


</script>